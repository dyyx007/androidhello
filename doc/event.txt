

Android事件传递机制
http://www.infoq.com/cn/articles/android-event-delivery-mechanism/


MotionEvent 

按下（ACTION_DOWN）
移动（ACTION_MOVE）
抬起（ACTION_UP）


View  ViewGroup  

UI控件例如Button、TextView继承于View
布局控件例如RelativeLayout、容器控件例如ListView 继承于ViewGroup


View.java

public boolean dispatchTouchEvent(MotionEvent event)
public boolean onTouchEvent(MotionEvent event) 

ViewGroup.java

public boolean dispatchTouchEvent(MotionEvent event)
public boolean onTouchEvent(MotionEvent event) 
public boolean onInterceptTouchEvent(MotionEvent event)

事件传递 消费 拦截

dispatchTouchEvent方法用于事件的分发，Android中所有的事件都必须经过这个方法的分发，
然后决定是自身消费当前事件还是继续往下分发给子控件处理。返回true表示不继续分发，事件没有被消费。
返回false则继续往下分发，如果是ViewGroup则分发给onInterceptTouchEvent进行判断是否拦截该事件。

onTouchEvent方法用于事件的处理，返回true表示消费处理当前事件，返回false则不处理，交给子控件进行继续分发。


onInterceptTouchEvent  ViewGroup才有 ，View中没有，负责事件的拦截，
返回true的时候表示拦截当前事件，不继续往下分发，交给自身的onTouchEvent进行处理。返回false则不拦截，继续往下传。


http://blog.csdn.net/awangyunke/article/details/22047987

1，ViewGroup通过dispatchTouchEvent方法传递给interceptTouchEvent：
    （1）如果返回true ，则交给这个ViewGroup的onTouchEvent处理。
    （2）如果返回false，则交给子View的 dispatchTouchEvent方法处理。

2，事件传递到子view 的 dispatchTouchEvent方法中，通过方法传递到当前View的onTouchEvent方法中：

    （1）如果返回true，那么这个事件就会止于该view。
    （2）如果返回 false ，那么这个事件会从这个子view 往上传递，而且都是传递到父View的onTouchEvent 来接收。

    （3）如果传递到ViewGroup的 onTouchEvent 也返回 false 的话，则继续传递到Activity的onTouchEvent中，如果还是false,则这个事件就会“消失“；
         事件向上传递到中间的任何onTouchEvent方法中，如果返回true，则事件被消费掉，不会再传递。



